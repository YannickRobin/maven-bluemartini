DNA {
    "ruleConstraintAmt" DNA {
        "dnaType" String "currency",
        "label" String "ruleConstraintAmt",
        "min" Currency "0.0"
    },
     "ruleConstraintAttribute_cd" DNA {
        "description" String "business object attributes for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintAttribute",
        "format" String "domain",
        "label" String "ruleConstraintAttributeLabel"
     },
    "ruleConstraintBoolean_cd" DNA {
        "description" String "Boolean values for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintBoolean",
        "format" String "domain",
        "label" String "ruleConstraintBoolean_cd"
    },
    "ruleConstraintBooleanOperator_cd" DNA {
        "description" String "Boolean operator for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintBooleanOperator",
        "format" String "domain",
        "label" String "ruleConstraintBooleanOperator_cd"
     },
    "ruleConstraintComparableOperator_cd" DNA {
        "description" String "Comparable operators for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintComparableOperator",
        "format" String "domain",
        "label" String "ruleConstraintComparableOperator_cd"
     },
    "ruleConstraintDate" DNA {
        "datetimeFormat" String "ruledate",
        "dnaType" String "datetime",
        "label" String "ruleConstraintDate"
    },
    "ruleConstraintDateOperator_cd" DNA {
        "description" String "Date operators for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintDateOperator",
        "format" String "domain",
        "label" String "ruleConstraintDateOperator_cd"
     },
    "ruleConstraintLogicalConnective_cd" DNA {
        "description" String "Binary logical operators to connect rule constraints",
        "dnaType" String "string",
        "domain" String "ruleConstraintLogicalConnective",
        "format" String "domain",
        "label" String "ruleConstraintLogicalConnective_cd"
    },
    "ruleConstraintNumber" DNA {
        "dnaType" String "double",
        "label" String "ruleConstraintNumber"
    },
     "ruleConstraintStandardOperator_cd" DNA {
        "description" String "Basic operators for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintStandardOperator",
        "format" String "domain",
        "label" String "ruleConstraintStandardOperator_cd"
     },
    "ruleConstraintString" DNA {
        "dnaType" String "string",
        "label" String "ruleConstraintString"
    },
     "ruleConstraintStringOperator_cd" DNA {
        "description" String "String operators for a rule constraint",
        "dnaType" String "string",
        "domain" String "ruleConstraintStringOperator",
        "format" String "domain",
        "label" String "ruleConstraintStringOperator_cd"
     },
    "ruleConstraintQty" DNA {
        "dnaType" String "integer",
        "label" String "ruleConstraintQty"
    },
    "ruleExistentialQuantifier_cd" DNA {
        "description" String "Existential quantifiers 'exists' and 'not'",
        "dnaType" String "string",
        "domain" String "ruleExistentialQuantifier",
        "format" String "domain",
        "label" String "ruleExistentialQuantifier_cd"
    },
     "ruleFactType" DNA {
        "description" String "names of business objects used as rule facts",
        "dnaType" String "string",
        "domain" String "ruleFactType_dm",
        "format" String "domain",
        "label" String "ruleFactType"
    },
    "ruleTestExistence" DNA {
        "description" String "Test for existence",
        "dnaType" String "boolean",
        "label" String "ruleTestExistence"
    }
}